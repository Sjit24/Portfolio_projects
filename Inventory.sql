Create database CaseStudy

use CaseStudy

select * from Fact
select * from Location

--1. How many states are there where products have been sold ?

Select Count(distinct State) as No_of_State from Location
join
Fact
on
Location.Area_Code=Fact.Area_Code

--2.How many products are of regular type ?
Select * from Product

Select Count(Product) as No_of_Product from Product where Type='Regular'

--Reference
Select Count(product) as No_of_Product, Product from Product where Type='Regular'
group by Product

--3. How much spending has been done on marketing of product id 1

Select SUM(Marketing) as Spending from Fact where ProductId=1

--4. What is the minimum sales of a product ?

Select MIN(Sales) as Minimum_Sales from Fact

--Reference Product_Name along with Sale

Select Product, Sales from Product
join
Fact
on Product.ProductId=Fact.ProductId
where Sales = (Select MIN(Sales) from Fact)

--5) Display max Cost of Good Sold(COGS).

Select MAX(COGS)as Maximum_COGS from Fact
select Product, COGS from Product
join Fact on Product.ProductId = Fact.ProductId
where COGS = (Select (max(distinct COGS)) from Fact)



--6) Display the Details of the productid where product type is coffee

Select * from Product where Product_Type='Coffee'

--OR

Select ProductId from Product where Product_Type='Coffee'

--7) Display the details where total_expenses is greater than 40.

Select * from Fact where Total_Expenses > 40
Order by Total_Expenses

--8) What is the average sales in Area_Code 719 ?

Select AVG(Sales) as Average_Sales from Fact where Area_Code =719

--9) Find out the total profit generated by Colorado state.
-- Joins (Fact, Location)

Select SUM(profit) as Total_Profit, State from Fact
join
Location
on
Fact.Area_Code=Location.Area_Code
where State='Colorado' 
group by State

--10) Display the average inventory for each product id.

Select ProductId, Avg(Inventory) As Average_Inventory from Fact
group by ProductId
Order by ProductId

--11) Display state in a sequential order in a location table.

Select DISTINCT State from Location
order by State DESC

--12) Display the average budget margin of the store where average budget margin should be
--greater than 100.

Select ProductId, AVG(Budget_Margin) as Budget_margin from Fact 
group by ProductId
having Avg(Budget_margin)>100
order by ProductId 

--13) What is the total sales done on date 2010-01-01

Select SUM(Sales) as Total_Sales2010_Jan1 from Fact
where Date ='2010-01-01'

--14) Display the average total expense of each product id on individual date

Select ProductId, AVG(Total_Expenses)as Average_Total_Expenses, Date from Fact
group by ProductId, Date
Order by Date

--or
Select ProductId, AVG(Total_Expenses)as Average_Total_Expenses, Date from Fact
group by ProductId, Date
Order by ProductId

--15) Display the table with the following attributes such as
--Date, productid, product_type, product, Sales, profit, state, area_code

-- join 3 tables

Select Date, P.ProductId, product_type, product, Sales, profit, state, L.Area_code
from Fact F
join
Location L
on F.Area_Code=L.Area_Code
join
Product P
on
F.ProductId=P.ProductId

--16) Display the rank without any gap to show the Sales wise rank.

Select DISTINCT *, DENSE_RANK()over(order by Sales DESC) as Sales_Rank 
from Fact
Order by Sales_Rank

Select Date,Sales, DENSE_RANK()over(order by Sales DESC) as Sales_Rank from Fact

--or
Select Date,Sales, RANK()over(order by Sales DESC) as Sales_Rank from Fact
Select Date,Sales, Row_number()over(order by Sales DESC) as Row_No from Fact

--17) Find the State wise Profit and Sales.

Select State, SUM(Sales) as Total_Sales, SUM(Profit) as Total_Profit from Fact
join
Location 
on 
Fact.Area_Code=Location.Area_Code
group by State

--18) Find the State wise Profit and Sales along with the Product Name.
Select Product,State, SUM(Sales) as Total_Sales, SUM(Profit) as Total_Profit from Fact
join
Location 
on 
Fact.Area_Code=Location.Area_Code
join
Product
on 
Fact.ProductId=Product.ProductId
group by State, Product

--19) If there is an increase in sales of 5%. Calculate the increased sales.
Select Sales as Actual_Sales, (Sales * 1.05) as Increased_Sales from Fact

--20) Find the maximum profit along with the Product id and Product Type.
-- Fact, Product

Select P.ProductId, Product_Type, Profit from Product P
join
Fact F
on 
F.ProductId=P.ProductId
where Profit = (Select MAX(Profit) from Fact)

--21) Create a Stored Procedure to fetch the result according to the product type from Product.

--Procedure Creation
create procedure Ptype (@pt varchar(20))
as
select * from Product where Product_Type=@pt

--Calling
Exec Ptype @pt='Coffee'
Exec Ptype @pt='Tea'

Exec Ptype 'Coffee'

--29) Display the ASCII value of the fifth character from the column product.

select * from Product

Select Product,SUBSTRING(Product,5,1) as Fifth_char, ASCII(SUBSTRING(Product,5,1)) as 
ASCII_Value from Product

select ASCII('e')

--23) Give the total weekly sales value with the Date and productid details. Use roll-up to pull the
--data in hierarchical order.
Select Date,ProductId, SUM(Sales)as Total_Sales from Fact
group by ProductId, Date
with rollup